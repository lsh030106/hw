forwarding 입력 링크에서 출력 링크로 전달
라우팅 패킷경로 설정(라우팅 알고리즘)

네트워크 계층도 TCP 3 way handshake 처럼 데이터 패킷이 흐르기 전에 핸드셰이크 하는데 이걸 
연결 설정 (connect setup) 이라고 한다

network service model

* 보장된 전달: 서비스는 패킷이 목적지에 꼭 도착한다는 것을 보장한다 

* 제한 지연 이내의 보장된 전달: 서비스는 패킷의 전달 보장뿐만 아니라 호스트 간의 
특정 지연 제한(가령 100ms 이내) 안에 전달 한다는 것이다

아래와 같은 서비스가 주어진 근원지와 목적지 간의 패킷 흐름에 제공될 수 있다

* 순서화(in-order) 패킷 전달: 서비스는 패킷들이 목적지에 송신된 순서로 도착하는 것을 보장한다

* 보장된 최소 대역폭: 네트워크 계층 서비스는 송신과 수신 호스트 사이에 특정한 비트속도의 전송 링크를 예뮬레이트 한다. 송신 호스트가 비트들을 특정한 속도 이하로 전송하는 한, 어떤 패킷의 손실 없이 각 패킷은 특정한 호스트 간의 지연 이내에 도착한다

* 보장된 최대 지터(jitter): 서비스는 송신자에서의 두 개의 연속적인 패킷 전송 사이의 시간 간격이 목적지에서 그 수신 간의 시간 간격과 같도록 ( 시간 간격변화가 특정값보다 크지 않도록) 보장한다 

이것보다 더 많다

인터넷 네트워크 계층은 최선형 서비스(best-effort service) 라고 알려진 서비스를 제공한다

그냥 최선을 다하겠다는 것. 패킷사이에 속도 조절이 유지된다는 것을 보장하지 않는다.
패킷이 보내진 순서대로 수신됨을 보장할 수 없다.
목적지까지의 패킷전달조차 보장하지 않는다
위에 서술한 서비스들을 최선을 다해서 서비스하되 보장은 안한다



트랜스포트 계층처럼 네트워크 계층도 연결형과 비연결형 서비스를 제공한다 

지금까지의 모든 컴퓨터 네트워크에서 네트워크 계층은 호스트 사이의 비연결형 서비스나 연결형 서비스 하나만 제공하고 이 둘을 동시에 제공하지 않는다.
연결형 서비스만을 제공하는 컴퓨터 네트워크를 가상회선 네트워크(virtual-circuit network) 라고 하고, 네트워크 계층에서 비연결형 서비스만을 제공하는 컴퓨터 네트워크를 데이터그램 네트워크(datagram network) 라고한다

인테넷은 데이터그램 네트워크다. 근데 일단은 가상회선 네트워크를 보면
네트워크 계층 연결을 사용한다

VC의 구성은
1. 근원지와 목적지 호스트 간의 경로( 일련의 라우터와 링크들)
2. 경로에 있는 각 링크마다 부여되는 번호인 가상 번호
3. 경로상에 있는 각 라우터 포워딩 테이블 안의 엔트리

vc에 속하는 패킷은 헤더 안에 가상회선 번호를 갖는다. 각 링크에서 서로 다른 vc 번호를 가지므로
라우터가 전달패킷의 vs 번호를 새걸로 교체해준다. 포워딩 테이블에서 꺼내서 하나 준다

각 라우터의 포워딩 테이블은 VC 번호 변환을 포함한다
라우터에 새로운 VC가 설정될 때마다 포워딩 테이블에 엔트리로 추가된다, 종료 될때마다 엔트리가 삭제된다

VC 네트워크에서 네트워크 라우터는 현재 연결에 대한 connection state information 을 유지 해야 한다

굉장히 중요하다 연결 상태 정보를 유지하냐 안하냐는 엄청 중요하다

가상회선 동작은 아래 3단계로 이루어진다 

1. VC 설정 : 설정 단계 동안에 송신 트랜스포트 계층은 네트워크 계층과 접촉하고 수신자 주소를 명시해 네트워크가 VC를 설정할 때까지 기다린다. 네트워크 계층은 송신자와 수신자 사이의 경로, 
!!!! 즉 VC 의 모든 패킷이 이동할 일련의 링크와 라우터들을 결정한다 !!!!!!
VC 설정 동안 네트워크 계층은 VC 경로를 따라서 자원( 대역폭 등) 을 예약한다 

(circuit switching 같다)

2. 데이터 전송: VC가 설정되면 데이터는 VC를 따라 흐름을 시작한다.

3. VC 해제 : 송신자나 수신자가 VC 해제를 위한 신호를 네트워크 계층에 알리면서 시작된다.
네트워크 계층은 보통 네트워크의 다른쪽 에 있는 종단 시스템에 호종료를 알리고 VC가 더이상 존재하지 않다는걸 알리기 위해 경로상의 각 패킷 스위치 테이블을 갱신한다

경로상의 모든 라우터들이 VC 설정에 참여하고 각 라우터는 자신을 통과하는 모든 VC를 인식한다

진짜 그냥 circuit switching 이랑 다른게 없다 그냥 냅다 꽂아 버리는거

end system 들이 네트워크에 VC의 시작이나 종료를 알리기 위해 보내는 메시지와 VC를 설정하기 위해 라우터들 사이에서 전달되는 메시지를 시그널링 메시지(signaling message) 라고 하고
이러한 메시지를 교환하기 위한 프로토콜을 시그널링 프로토콜(signaling protocol) 이라 한다.

VC는 여기까지 사실 별로 안중요하다 쓸라면 쓰자

!!!!!!!!!!!!!!!!!데이터그램 네트워크

end system 이 패킷을 보낼때마다 패킷에 목적지 end system 의 주소만 찍어서 네트워크에 보낸다
VC 설정을 하지 않으니 상태정보가 필요가 없다. connection state information 을 유지 안한다 이거다

패킷은 일련의 라우터를 지나게 되는데 얘들이 또 패킷의 목적지 주소만을 사용해서 패킷을 포워딩한다
자세하게 말하자면 목적지 주소를 링크 인터페이스에 대응시킨 포워딩 테이블을 가지고 있다가
패킷이 도착하면 라우터는 패킷의 목적지 주소를 포워딩 테이블 내부의 적절한 출력 링크 인터페이스를 찾는데 사용한다

그리고 라우터는 출력 링크 인터페이스로 패킷을 전달한다 


최장 프리픽스 대응 규칙 (longest prefix matching rule)

라우터가 connection state information 을 유지하지 않더라도 forwarding table 에 forwarding state information은 유지한다 

데이트그램 네트워크에서 포워딩 테이블은 라우팅 알고리즘에 의해 수정되는데, 대개 1~5분마다 갱신한다

백본망에서는 마이크로초 시간 단위로 갱신이 이루어진다

언제든지 수정가능하므로 경로는 언제나 변경가능



라우터 뜯어보기

스위칭 구조: 스위칭 구조는 라우터의 입력포트를 출력포트로 연결한다. 스위칭 구조는 라우터 내부에 있다
-> 라우터 내부의 네트워크인 셈)

출력포트 : 출력포트는 스위칭 구조를 통해 전달될 패킷을 보관하고 출력 링크에 패킷을 전송해준다. 출력 포트는 역 데이터 링크와 입력포트로서 물리 계층 기능을 수행한다.
하나의 링크가 양방향일때 링크의 출력포트는 그링크의 입력포트와 한쌍이된다

라우팅 프로세서 : 얘가 라우팅 프로토콜한다

HOL 블로킹
head of the line 

출력포트에 경쟁자가 없어 바로 나갈 수 있지만 라인의 앞쪽에서 다른 패킷이 막고 있으므로 입력큐에서 대기해야함

입력링크에서 패킷도착속도가 용량의 58퍼센트가 되면 HOL 블로킹 때문에 입력 큐가 무한정 길이로 증가함
패킷 손실이 어마무시함


IPv4 데이터그램 포맷

버전 정보 4bit : 데이터 그램의 IP 프로토콜 버전 명시
라우터는 버전 번호를 확인해 어떻게 IP 데이터그램의 나머지 부분을 해석할지 결정

헤더 길이 4bit : 데이터그램은 옵션을 포함하므로 IP 데이터그램에서 실제 데이터가 시작하는 곳을 결정. 대부분 
IPv4 데이터그램은 옵션을 포함하지 않으므로 대체로 IPv4 데이터그램 헤더는 20바이트다

TOS 8bit: 서비스타입 (type of service) 비트는 다양한 타입의 IP 데이터그램을 허용하고, 과부화가 발생했을때 각각 식별해서 다르게 관리한다는 가정하에 헤더에 포함되어있다
네트워크에 과부하가 발생했을때 데이터를 나르는 데이터그램과 네트워크 제어 데이터그램을 식별하는데 유용하다
실시간 데이터그램과 비실시간 트래픽을 구분하는 데 유용하다

데이터그램 길이 16bit : 바이트로 계산한 IP 데이터그램 (헤더와 데이터) 의 전체길이다.
이론상 65535 바이트지만 1500바이트보다 큰경우는 드물다.

16비트 인식자, 3비트 플래그, 13비트 단편화 오프셋 : IP 단편화와 관련성이 있다

TTL 8bit : Time to live, 데이터 그램이 네트워크에서 무한히 순환하지 않음을 보장한다(라우팅 루프) 
이 필드값은 라우터가 데이터그램을 처리할때마다 감소한다. TTL 필드가 0이되면 데이터그램은 폐기된다

상위계층 프로토콜 8bit : IP 데이터그램이 최종목적지에 도착했을 때만 사용된다. IP 데이터그램에서 데이터 부분이 전달될 목적지의 트랜스포트 계층 프로토콜을 명시한다
6은 TCP로 17은 UDP로 전달하라는것을 의미한다

얘는  트랜스포트 세그먼트에서 포트번호 필드의 역할과 유사하다 프로토콜 번호 필드는 네트워크와 트랜스포트 계층을 하나로 결합한다

헤더 검사합 16비트 : 이거 똑같다 근데 라우터마다 TTL처럼 검사하고 다시 저장된다 오류나면 라우터에서 폐기한다
근데 이필드는 옵션 필드로 수정될 수도 있다

근원지와 목적지 IP 주소 32bit: 주소다

옵션 : 옵션 필드는 IP 헤더를 확장한다 
모든 데이터그램 헤더옵션필드에 정보를 포함하지 않는 방법으로 오버헤드를 해결하려는 생각에 헤더 옵션은 거의 사용되지 않는다
데이터그램 헤더가 가변 길이라서 데이터 필드 시작점을 초기에 결정할 수 없으므로 옵션 은 문제를 복잡하게 만든다

데이터(페이로드) : 데이터 그램이 존재하는 이유
세그먼트를 포함한 ㅏICMP 메시지같은 데이터 형태를 담기도 한다

총 20바이트의 헤더를 갖는다
TCP 세그먼트를 전송한다면 총 40바이트의 헤더가 될것이다


근데 단편화가 필요한 이유는

이더넷 패킷은 1500바이트 이상, 장거리 링크는 576바이트 이상을 전달 할 수 없다
링크 계층 패킷이 전달할 수 있는 최대 양을 MTU 라고 하는데 각 IP 데이터그램은 


CIDR

classless interdomain routing


호스트 하나에 직접 연결된 라우터 -> 호스트에 대한 default router or 첫번째 홉 라우터, source router, 
destination router

routing protocol 의 핵심은 하나 근원지 라우터에서 목적지 라우터까지 패킷의 경로를 결정하는 알고리즘

좋은 경로란 최소비용의 경로

라우팅 알고리즘 종류

Global routing algorithm

네트워크에 대한 완벽한 전체 정보를 가지고 근원지와 목적지 사이의 최소비용경로를 계산함 
글로벌 알고리즘은 입력값으로 모든 노드와 모든 링크 비용에 대한 정보를 요구
각 링크에 대한 비용을 알고 있어야하니 LS; link state 알고리즘이라 부르기도 한다

그 정보는 link state broadcast algorithm 으로 수집

다익스트라 알고리즘은 한노드(근원지 u) 에서 네트워크의 다른 모든 노드에 이르는 최소비용경로를 계산
알고리즘의 k번째 반복 이후 k개의 목적지 노드에 대해 최소비용경로가 알려지며 목적지는 k개의 최소비용을 가짐

글로벌 라우팅 알고리즘은
초기화 단계와 루프로 구성되며 루프 수행 횟수는 네트워크의 노드 수와 같다
루프 수행이 종료되면 알고리즘은 근원지 노드 u에서 네트워크 상의 모든 다른 노드까지의 최단경로를 산출가능




분산 라우팅 알고리즘

최소비용경로의 계산은 반복적이고 분산된 방식으로 수행된다

노드가 모든 네트워크 링크의 비용에 대한 완벽한 정보를 가지고 있지 않다
대신에 각 노드는 링크에 직접 연결된 링크의 비용에 대한 정보만 가진다
정보교환을 통해 노드는 점차적으로 목적지까지 최소비용경로를 계산한다
거리벡터 DV; distance vector 알고리즘이라고 알려져 있는 분산 라우팅 알고리즘이다

각 노드가 네트워크의 다른 노드까지의 비용의 추정지들을 벡터형으로 유지하므로 거리 벡터 알고리즘이라고 부른다

반복적, 비동기적, 분산적, 자기 종료

벨만포드식






